
//Problem2246


#include<stdio.h>
#include<string.h>
char nixu(char n[])
{
	char t[10000];
	int i;
	for (i = 0; i < strlen(n); i++)
	{
		t[i] = n[i];
	}
	for (i = 0; i < strlen(n); i++)
	{
		n[i] = t[strlen(n) - i-1];
	}
	n[i] = '\0';
	return 1;
}
int max(int a,int b)
{
	if (a > b) return a;
	else return b;
}
int min(int a, int b)
{
	if (a < b)
		return a;
	else
		return b;
}
int main()
{
	int u=0;
	int o;
	int g;
	int i,k=0;
	int t=0;
	int h1, h2;
	
	scanf("%d", &g);
	for (o = 0; o < g; o++)
	{
		int ans[5000] = { 0 };
		char n[5000] = { 0 }, m[5000] = { 0 };
		scanf("%s", n);
		scanf("%s", m);
		nixu(n);
		nixu(m);
		h1 = strlen(n);
		h2 = strlen(m);
		for (i = 0; i < max(h1,h2); i++)
		{
			m[strlen(m)] = '0';
			n[strlen(n)] = '0';
			ans[i] = (n[i] + m[i] - 2 * '0' + t) % 10 ;
			
			t = (n[i] + m[i] - 2 * '0' + t) / 10;
			k++;
		}
		/*for (i ; i < max(strlen(n), strlen(m)); i++)
		{
			if (i == min(strlen(n), strlen(m)))
			{
				ans[i] = (n[i] + m[i] -  '0' + t) % 10;
				t = (n[i] + m[i] -  '0' + t) / 10; k++;
			}
			else
			{
				ans[i] = (n[i] + m[i] - 2 * '0' + t) % 10;
				t = (n[i] + m[i] - 2 * '0' + t) / 10; k++;
			}

		}*/
		if (t != 0) printf("%d", t);
		for (i = 0; i < k; i++)
		{
				printf("%d", ans[k - i - 1]);

		}
		printf("\n");
		u = 0;
		t = 0;
		k = 0;
	}
}



