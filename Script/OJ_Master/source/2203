
//Problem2203


#include<stdio.h>
int main()
{
	int t;
	scanf("%d", &t);

	for (int i = 0; i < t; i++)
	{
		struct
		{
			int x;
			int y;
			int d;
			int top;
			int now;
		}w[5][5], start, end, *p;
		for (int i = 0; i < 5; i++)
		{
			for (int k = 0; k < 5; k++)
			{
				w[i][k].x = i;
				w[i][k].y = k;
				w[i][k].d = 0;
				w[i][k].top = -1;
				w[i][k].now = 0;
			}
		}
		scanf("%d%d", &start.x, &start.y);//输入起点
		scanf("%d%d", &end.x, &end.y);//输入终点
		getchar();
		for (int k = 0; k < 5; k++)//输入地图
		{
			for (int l = 0; l <= 5; l++)
			{
				char yy;
				yy = getchar();
				if (l != 5)
				{
					if (yy == '*')
					{
						w[k][l].d = 0;
					}
					else
					{
						w[k][l].d = 1;
					}
				}
			}
		}
		p = &w[start.x][start.y];
		int flag = 1;
		while (p != &w[end.x][end.y])
		{
			
			if (p == &w[start.x][start.y] && (p + 1)->d != 1 && (p + 5)->d != 1 && (p - 1)->d != 1 && (p - 5)->d != 1)
			{
				printf("NO\n");
				break;
			}
			if ((p + 1)->d == 1&&p->top!=2)
			{
				p = p + 1;
				p->top = 0;
				if (p->now == 1 && flag == 0)
				{
					printf("NO\n");
					break;
				}
				p->now = 1;	flag = 0;
				
			}
			else 	if ((p + 5)->d == 1&&p->top != 3)
			{
				p += 5;
				p->top = 1;
				if (p->now == 1 && flag == 0)
				{
					printf("NO\n");
					break;
				}
				p->now = 1;	flag = 0;
			}
			else if ((p - 1)->d == 1&& p->top != 0)
			{
				p -= 1;
				p->top = 2;
				if (p->now == 1 && flag == 0)
				{
					printf("NO\n");
					break;
				}
				p->now = 1;	flag = 0;
			}
			else if ((p - 5)->d == 1&& p->top != 1)
			{
				p -= 5;
				p->top = 3;
				if (p->now == 1 && flag == 0)
				{
					printf("NO\n");
					break;
				}
				p->now = 1;
				flag = 0;
			}
			else if (p->top == 0)
				{
				
				p->d = 0;
					p -= 1;
					flag = 1;
				}
			else if (p->top == 1)
				{
					p->d = 0;
					p -= 5;
					flag = 1;
				}
			else if (p->top == 2)
				{
					p->d = 0;
					p += 1;
					flag = 1;
				}
			else if(p->top==3)
				{
					p->d = 0;
					p += 5;
					flag = 1;
				}
			
		

		}
		if (p->x == end.x&&p->y == end.y)
			printf("YES\n");

	}
}



