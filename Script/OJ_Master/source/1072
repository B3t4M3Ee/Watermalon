
//Problem1072




#include<stdio.h>
#include<string.h>
#define N 1025
int dp[N][N] = { 0 };
int min(int a, int b)
{
	return a < b ? a : b;
}
int lcs_jll(char a[], char b[])
{
	int i, j, cost;
	int n = strlen(a);
	int m = strlen(b);
	for (i = 1; i <= n; i++)
		dp[i][0] = i;
	for (i = 1; i <= m; i++)
		dp[0][i] = i;
	for (i = 1; i <= n; i++)
	{
		for (int k = 1; k <= m; k++)
		{
			if (a[i - 1] == b[k - 1])
				cost = 0;
			else
				cost = 1;
			dp[i][k] = min(min(dp[i - 1][k] + 1, dp[i][k - 1] + 1), dp[i - 1][k - 1] + cost);
		}
	}
	return dp[n][m];
}
int lcs_jl(char a[], char b[])
{
	int n = strlen(a);
	int m = strlen(b); 

	for (int i = 1; i <= n; i++)
	{
		dp[i][0] = i;
	}
	for (int i = 1; i <= m; i++)
	{
		dp[0][i] = i;
	}
	
	
	for (int i = 1; i <= n; i++)
	{
		for (int k = 1; k <= m; k++)
		{
			int cost;
			if (a[i - 1] == b[k - 1])
					cost = 0;
			else
     				cost = 1;
			dp[i][k] = min(min(dp[i - 1][k] + 1, dp[i][k - 1] + 1), dp[i - 1][k - 1]+cost);
		}
	}
	return dp[n][m];
}
int main()
{
	char a[N], b[N];
	while (scanf("%s%s", a, b) == 2)
	{

		int n = lcs_jl(a, b);
		printf("%d\n", n);

	}
	return 1;
}





